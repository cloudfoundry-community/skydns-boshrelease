#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

# Setup env vars and folders for the webapp_ctl script
source /var/vcap/jobs/skydns/helpers/ctl_setup.sh 'skydns'

case $1 in

  start)
    pid_guard $PIDFILE $JOB_NAME

    echo $$ > $PIDFILE

    mkdir -p /var/vcap/data/sys/log/skydns

    # Available flags:
    # -domain - This is the domain requests are anchored to and should be appended to all requests (Defaults to: skydns.local)
    # -http - This is the HTTP ip:port to listen on for API request (Defaults to: 127.0.0.1:8080)
    # -dns - This is the ip:port to listen on for DNS requests (Defaults to: 127.0.0.1:53)
    # -data - Directory that Raft logs will be stored in (Defaults to: ./data)
    # -join - When running a cluster of SkyDNS servers as recommended, you'll need to supply followers with where the other members can be found, this can be any member or a comma separated list of members. It does not have to be the leader. Any non-leader you join will redirect you to the leader automatically.
    # -discover - This flag can be used in place of explicitly supplying cluster members via the -join flag. It performs a DNS lookup using the hosts DNS server for NS records associated with the -domain flag to find the SkyDNS instances.
    # -metricsToStdErr - When this flag is set to true, metrics will be periodically written to standard error
    # -graphiteServer - When this flag is set to a Graphite Server URL:PORT, metrics will be posted to a graphite server
    # -stathatUser - When this flag is set to a valid StatHat user, metrics will be posted to that user's StatHat account periodically
    # -secret - When this variable is set, the http api will require an authorization header that matches the secret passed to skydns when it starts
    exec skydns \
      -data /var/vcap/data/sys/log/skydns \
      -secret $SKYDNS_SECRET \
       >>$LOG_DIR/$JOB_NAME.stdout.log \
       2>>$LOG_DIR/$JOB_NAME.stderr.log

    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;
  *)
    echo "Usage: skydns_ctl {start|stop}"

    ;;

esac
exit 0